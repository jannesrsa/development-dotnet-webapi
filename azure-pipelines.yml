trigger:
  - main
  - develop
variables:
  buildConfiguration: Release
  ASPNETCORE_ENVIRONMENT : Tests
  solution: development-dotnet-webapi.sln
  COVERLET_EXCLUDE_FILTER: '[Samples]*%2c[TestHelper]*%2c[.*Tests]*%2c[*.UnitTests]*%2c[xunit.*]*%2c[*Test*]*'
  COVERLET_EXCLUDE_ATTRIBUTE: >-
    DebuggerNonUserCodeAttribute%2cExcludeFromCodeCoverageAttribute%2cGeneratedCodeAttribute%2cCompilerGeneratedAttribute%2cMicrosoft.VisualStudio.TestPlatform.TestSDKAutoGeneratedCode

jobs:
- job: DotNet

  pool:
    vmImage: ubuntu-latest

  steps:
    - task: UseDotNet@2
      displayName: Use .NET 5.0
      inputs:
        version: 5.0.x

    - script: dotnet build $(solution) --configuration $(buildConfiguration)
      displayName: dotnet build $(solution) --configuration $(buildConfiguration)

    - task: DotNetCoreCLI@2
      displayName: Test and calculate code coverage
      inputs:
        command: test
        projects: $(solution)
        arguments: >-
          -c $(BuildConfiguration) -v minimal --blame
          /p:Exclude=$(COVERLET_EXCLUDE_FILTER)
          /p:ExcludeByAttribute=$(COVERLET_EXCLUDE_ATTRIBUTE) 
          /p:CollectCoverage=true 
          /p:CoverletOutputFormat=cobertura

    - task: Palmmedia.reportgenerator.reportgenerator-build-release-task.reportgenerator@4
      displayName: Generate Code Coverage Reports
      inputs:
        reports: '$(Build.SourcesDirectory)/**/coverage.cobertura.xml'
        targetdir: '$(Build.SourcesDirectory)/coverage/reports'
        reporttypes: 'Cobertura'

    - task: PublishCodeCoverageResults@1
      displayName: Publish Code Coverage Results
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: $(Build.SourcesDirectory)/coverage/reports/Cobertura.xml
        reportDirectory: '$(Build.SourcesDirectory)/coverage/reports'